"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnstructuredClient = exports.SDKConfiguration = exports.ServerList = exports.ServerLocal = exports.ServerProd = void 0;
var general_1 = require("./general");
var axios_1 = __importDefault(require("axios"));
/**
 * Hosted API
 */
exports.ServerProd = "prod";
/**
 * Development server
 */
exports.ServerLocal = "local";
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = (_a = {},
    _a[exports.ServerProd] = "https://api.unstructured.io",
    _a[exports.ServerLocal] = "http://localhost:8000",
    _a);
var SDKConfiguration = /** @class */ (function () {
    function SDKConfiguration(init) {
        this.language = "typescript";
        this.openapiDocVersion = "0.0.1";
        this.sdkVersion = "0.10.5";
        this.genVersion = "2.277.0";
        this.userAgent = "speakeasy-sdk/typescript 0.10.5 2.277.0 0.0.1 unstructured-client";
        Object.assign(this, init);
    }
    return SDKConfiguration;
}());
exports.SDKConfiguration = SDKConfiguration;
/**
 * Unstructured Pipeline API: Partition documents with the Unstructured library
 */
var UnstructuredClient = /** @class */ (function () {
    function UnstructuredClient(props) {
        var _a, _b;
        var serverURL = props === null || props === void 0 ? void 0 : props.serverURL;
        var server = (_a = props === null || props === void 0 ? void 0 : props.server) !== null && _a !== void 0 ? _a : exports.ServerProd;
        if (!serverURL) {
            serverURL = exports.ServerList[server];
        }
        var defaultClient = (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create();
        this.sdkConfiguration = new SDKConfiguration({
            defaultClient: defaultClient,
            security: props === null || props === void 0 ? void 0 : props.security,
            serverURL: serverURL,
            retryConfig: props === null || props === void 0 ? void 0 : props.retryConfig,
        });
        this.general = new general_1.General(this.sdkConfiguration);
    }
    return UnstructuredClient;
}());
exports.UnstructuredClient = UnstructuredClient;
