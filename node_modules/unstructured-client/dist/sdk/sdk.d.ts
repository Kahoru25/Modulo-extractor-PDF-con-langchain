import * as utils from "../internal/utils";
import * as shared from "../sdk/models/shared";
import { General } from "./general";
import { AxiosInstance } from "axios";
/**
 * Hosted API
 */
export declare const ServerProd = "prod";
/**
 * Development server
 */
export declare const ServerLocal = "local";
/**
 * Contains the list of servers available to the SDK
 */
export declare const ServerList: {
    readonly prod: "https://api.unstructured.io";
    readonly local: "http://localhost:8000";
};
/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
    /**
     * The security details required to authenticate the SDK
     */
    security?: shared.Security | (() => Promise<shared.Security>);
    /**
     * Allows overriding the default axios client used by the SDK
     */
    defaultClient?: AxiosInstance;
    /**
     * Allows overriding the default server used by the SDK
     */
    server?: keyof typeof ServerList;
    /**
     * Allows overriding the default server URL used by the SDK
     */
    serverURL?: string;
    /**
     * Allows overriding the default retry config used by the SDK
     */
    retryConfig?: utils.RetryConfig;
};
export declare class SDKConfiguration {
    defaultClient: AxiosInstance;
    security?: shared.Security | (() => Promise<shared.Security>);
    serverURL: string;
    serverDefaults: any;
    language: string;
    openapiDocVersion: string;
    sdkVersion: string;
    genVersion: string;
    userAgent: string;
    retryConfig?: utils.RetryConfig;
    constructor(init?: Partial<SDKConfiguration>);
}
/**
 * Unstructured Pipeline API: Partition documents with the Unstructured library
 */
export declare class UnstructuredClient {
    general: General;
    private sdkConfiguration;
    constructor(props?: SDKProps);
}
